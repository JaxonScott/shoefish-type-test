import { type NextPage } from "next";
import React from "react";
import Head from "next/head";
import { useState, useEffect } from "react";
import clsx from "clsx";
import Countdown from "react-countdown";
import testData from "../data/data.json";

const Home: NextPage = () => {
  const [started, setStarted] = useState(false);
  const [userInput, setUserInput] = useState("");
  const [correct, setCorrect] = useState(true);
  const [timePicker, setTimePicker] = useState(30);

  const handleTimerState = () => {
    setStarted(true);
    setUserInput("");
  };
  //timer
  const time = React.useMemo(() => {
    return Date.now() + timePicker * 1000;
  }, [started]);

  const renderer = ({ seconds }: { seconds: number }) => {
    if (!started) {
      return (
        <div>
          <div className="mb-4 flex justify-center gap-4">
            <button
              onClick={() => setTimePicker(15)}
              className={clsx({
                ["bg-slate-500 bg-opacity-25 px-1 py-0.5 rounded-sm"]: timePicker === 15,
              })}
            >
              15s
            </button>{" "}
            <button
              onClick={() => setTimePicker(30)}
              className={clsx({
                ["bg-slate-500 bg-opacity-25 px-1 py-0.5 rounded-sm"]: timePicker === 30,
              })}
            >
              30s
            </button>{" "}
            <button onClick={() => setTimePicker(60)}  className={clsx({
                ["bg-slate-500 bg-opacity-25 px-1 py-0.5 rounded-sm"]: timePicker === 60,
              })}>60s</button>
          </div>
          <button
            onClick={handleTimerState}
            className="rounded-md bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 px-9 py-2 text-xl text-white"
          >
            Start
          </button>
        </div>
      );
    } else {
      return <span>{seconds}</span>;
    }
  };

  useEffect(() => {
    if (userInput === testData.text.join(" ").slice(0, userInput.length)) {
      setCorrect(true);
    } else {
      console.log("not correct");
      setCorrect(false);
    }
  }, [userInput, started]);

  console.log(testData.text.join(" ").slice(0, userInput.length));

  return (
    <>
      <Head>
        <title>Shoefish</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="mx-auto flex h-screen w-1/2 flex-col items-center justify-center">
        <div>
          <div className="mb-4 flex gap-4">
            {started ? (
              <p>
                {correct ? (
                  <span className="text-green-500">correct</span>
                ) : (
                  <span className="text-red-500">incorrect</span>
                )}
              </p>
            ) : null}
            {started || userInput.split(" ").length > 1 ? (
              <p>
                <span
                  className={clsx({
                    ["text-green-500"]: correct,
                    ["text-red-500"]: !correct,
                  })}
                >{`${userInput.split(" ").length - 1}`}</span>
                /{`${testData.text.length - 1}`}
              </p>
            ) : null}
          </div>
          <Countdown
            renderer={renderer}
            date={time}
            onComplete={() => setStarted(false)}
          ></Countdown>
        </div>

        {started ? (
          <div>
            <p className="leading-10">{testData.text.join(" ")}</p>
            <textarea
              autoFocus
              className="mt-4 h-1/2 w-full border-none bg-slate-800 text-white outline-none"
              value={userInput}
              onChange={(e) => setUserInput(e.target.value)}
            />
          </div>
        ) : (
          <></>
        )}
      </main>
    </>
  );
};

export default Home;
